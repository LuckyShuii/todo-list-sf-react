services:
  backend:
    build: ./backend
    container_name: backend
    volumes:
      - ./backend/src:/app/src
      - ./backend/migrations:/app/migrations
    env_file:
      - ./backend/.env
      - ./backend/.env.dev
    healthcheck:
      test: 'curl --fail --request POST --header "content-type: application/json" --url "http://backend:8000/api" --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    depends_on:
      db:
        condition: service_healthy
        
  frontend:
    build: ./frontend
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100

  db:
    image: postgres:17
    container_name: db
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "todo", "-U", "postgres"]
      interval: 1s
      timeout: 2s
      retries: 100
    environment:  
      POSTGRES_DB: todo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db/postgres-data/data:/var/lib/postgresql/data
      - ./db/dumps:/dumps
    env_file:
      - .env
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080

  apigateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - "7002:80"

  redis:
    image: redis